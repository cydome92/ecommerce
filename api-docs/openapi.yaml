openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:18080/api
  description: Generated server url
paths:
  /v1/prodotti:
    post:
      tags:
      - prodotto-controller
      operationId: insertProdotto
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProdottoDTO"
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProdottoDTO"
  /v1/prodotti/search:
    post:
      tags:
      - prodotto-controller
      operationId: searchProdotti
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProdottoDTO"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelProdottoDTO"
  /v1/ordini:
    post:
      tags:
      - ordine-controller
      summary: Creazione di un nuovo ordine
      description: |
        L'unico campo utilizzato all'interno della lista prodotti è il relativo id. Lo stato ordine, come la
        dataOraCreazione vengono scelti arbitrariamente dal server.
      operationId: insertOrdine
      parameters:
      - name: clienteId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdineDTO"
        required: true
      responses:
        "201":
          description: ordine creato con successo
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrdineDTO"
        "404":
          description: cliente o uno o più prodotti non trovati
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrdineDTO"
        "409":
          description: quantità ordinata supera lo stock per uno o più prodotti
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrdineDTO"
  /v1/ordini/search:
    post:
      tags:
      - ordine-controller
      summary: Ricerca di ordini
      description: |
        L'endpoint accetta opzionalmente un body in ingresso di cliente. Se nel body sono avvalorati i campi di nome, cognome
        e/o codice fiscale, il sistema cercherà utenti con dati simili a database e restituirà tutti i loro ordini
        come result set paginato. Se il body non è presente, oppure questi campi sono null, il sistema restituirà tutti i risultati
        in paginazione. Sono valide anche opzioni parziali (solo nome, solo cognome, solo codice fiscale) o combinazione di
        questi campi. La ricerca è inoltre ignore case. I parametri di ordinamento devono invece fare riferimento all'entità
        Ordine.
      operationId: searchOrdini
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClienteDTO"
      responses:
        "200":
          description: Ricerca avvenuta con successo
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelOrdineDTO"
  /v1/clienti:
    post:
      tags:
      - cliente-controller
      summary: Creazione di un nuovo cliente
      operationId: insertCliente
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClienteDTO"
        required: true
      responses:
        "201":
          description: cliente creato con successo
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ClienteDTO"
        "409":
          description: cliente con stessa email o codice fiscale già censito
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ClienteDTO"
  /v1/clienti/search:
    post:
      tags:
      - cliente-controller
      summary: Ricerca di clienti
      description: |
        L'endpoint accetta opzionalmente un body in ingresso. Se nel body sono avvalorati i campi di nome, cognome
        e/o codice fiscale, il sistema cercherà utenti con dati simili a database e li restituità come result set
        paginato. Se il body non è presente, oppure questi campi sono null, il sistema restituirà tutti i risultati
        in paginazione. Sono valide anche opzioni parziali (solo nome, solo cognome, solo codice fiscale) o combinazione di
        questi campi. La ricerca è inoltre ignore case.
      operationId: searchClienti
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClienteDTO"
      responses:
        "200":
          description: Ricerca avvenuta con successo
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelClienteDTO"
  /v1/ordini/{id}:
    delete:
      tags:
      - ordine-controller
      summary: cancellazione di un ordine
      description: |
        Se l'ordine risulta in stato CONSEGNATO, la cancellazione andrà in errore. Viceversa, per ogni prodotto
        inserito nell'ordine, il sistema effettuerà rollback dello stock decrementato in fase di salvataggio
        rendendo la relativa quantità nuovamente disponibile.
      operationId: deleteOrdine
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: cancellazione avvenuta con successo
        "404":
          description: ordine non trovato
        "409":
          description: ordine in stato CONSEGNATO oppure rollback stock in negativo
    patch:
      tags:
      - ordine-controller
      summary: Aggiorna lo stato di un ordine
      description: |
        Nel caso in cui venga inserito stato CONSEGNATO, il sistema imposterà automaticamente la dataOraConsegna
        con fuso orario Roma.
      operationId: updateStatoOrdine
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: stato
        in: query
        required: true
        schema:
          type: string
          enum:
          - ORDINATO
          - CONSEGNATO
      responses:
        "204":
          description: operazione effettuata con successo
        "404":
          description: ordine non trovato
components:
  schemas:
    ProdottoDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        codice:
          type: string
        nome:
          type: string
        quantita:
          type: integer
          format: int32
      required:
      - codice
      - nome
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
          minimum: 0
        size:
          type: integer
          format: int32
          minimum: 1
        sort:
          type: array
          items:
            type: string
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
    PagedModelProdottoDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/ProdottoDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    ClienteDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        codiceFiscale:
          type: string
          maxLength: 16
          minLength: 16
        nome:
          type: string
        cognome:
          type: string
        dataNascita:
          type: string
          format: date
        email:
          type: string
        dataOraIscrizione:
          type: string
          format: date-time
    OrdineDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        statoOrdine:
          type: string
          enum:
          - ORDINATO
          - CONSEGNATO
        cliente:
          $ref: "#/components/schemas/ClienteDTO"
        prodotti:
          type: array
          items:
            $ref: "#/components/schemas/ProdottoDTO"
          minItems: 1
        dataOraInserimento:
          type: string
          format: date-time
    PagedModelOrdineDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/OrdineDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelClienteDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/ClienteDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
